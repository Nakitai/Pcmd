;; -*- scheme -*-
; object definitions ...
;; Enumerations and flags ...


;; From gdkapplaunchcontext.h

(define-function gdk_app_launch_context_get_type
  (c-name "gdk_app_launch_context_get_type")
  (return-type "GType")
)

(define-function gdk_app_launch_context_new
  (c-name "gdk_app_launch_context_new")
  (is-constructor-of "GdkAppLaunchContext")
  (return-type "GdkAppLaunchContext*")
)

(define-method set_display
  (of-object "GdkAppLaunchContext")
  (c-name "gdk_app_launch_context_set_display")
  (return-type "none")
  (parameters
    '("GdkDisplay*" "display")
  )
)

(define-method set_screen
  (of-object "GdkAppLaunchContext")
  (c-name "gdk_app_launch_context_set_screen")
  (return-type "none")
  (parameters
    '("GdkScreen*" "screen")
  )
)

(define-method set_desktop
  (of-object "GdkAppLaunchContext")
  (c-name "gdk_app_launch_context_set_desktop")
  (return-type "none")
  (parameters
    '("gint" "desktop")
  )
)

(define-method set_timestamp
  (of-object "GdkAppLaunchContext")
  (c-name "gdk_app_launch_context_set_timestamp")
  (return-type "none")
  (parameters
    '("guint32" "timestamp")
  )
)

(define-method set_icon
  (of-object "GdkAppLaunchContext")
  (c-name "gdk_app_launch_context_set_icon")
  (return-type "none")
  (parameters
    '("GIcon*" "icon" (null-ok))
  )
)

(define-method set_icon_name
  (of-object "GdkAppLaunchContext")
  (c-name "gdk_app_launch_context_set_icon_name")
  (return-type "none")
  (parameters
    '("const-char*" "icon_name" (null-ok))
  )
)



;; From gdkscreen.h

(define-method get_monitor_width_mm
  (of-object "GdkScreen")
  (c-name "gdk_screen_get_monitor_width_mm")
  (return-type "gint")
  (parameters
    '("gint" "monitor_num")
  )
)

(define-method get_monitor_height_mm
  (of-object "GdkScreen")
  (c-name "gdk_screen_get_monitor_height_mm")
  (return-type "gint")
  (parameters
    '("gint" "monitor_num")
  )
)

(define-method get_monitor_plug_name
  (of-object "GdkScreen")
  (c-name "gdk_screen_get_monitor_plug_name")
  (return-type "gchar*")
  (parameters
    '("gint" "monitor_num")
  )
)



;; From gdkwindow.h

(define-method redirect_to_drawable
  (of-object "GdkWindow")
  (c-name "gdk_window_redirect_to_drawable")
  (return-type "none")
  (parameters
    '("GdkDrawable*" "drawable")
    '("gint" "src_x")
    '("gint" "src_y")
    '("gint" "dest_x")
    '("gint" "dest_y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method remove_redirection
  (of-object "GdkWindow")
  (c-name "gdk_window_remove_redirection")
  (return-type "none")
)



;; From gdk-pixbuf-core.h

(define-function pixbuf_new_from_stream
  (c-name "gdk_pixbuf_new_from_stream")
  (return-type "GdkPixbuf*")
  (parameters
    '("GInputStream*" "stream")
    '("GCancellable*" "cancellable" (null-ok) (default "NULL"))
    '("GError**" "error")
  )
)

(define-function pixbuf_new_from_stream_at_scale
  (c-name "gdk_pixbuf_new_from_stream_at_scale")
  (return-type "GdkPixbuf*")
  (parameters
    '("GInputStream*" "stream")
    '("gint" "width" (default "-1"))
    '("gint" "height" (default "-1"))
    '("gboolean" "preserve_aspect_ratio" (default "1"))
    '("GCancellable*" "cancellable" (null-ok) (default "NULL"))
    '("GError**" "error")
  )
)


(ifdef GDK_TARGET_X11
 
;; From gdkx.h

(define-function x11_screen_get_monitor_output
  (c-name "gdk_x11_screen_get_monitor_output")
  (return-type "XID")
  (parameters
    '("GdkScreen*" "screen")
    '("gint" "monitor_num")
  )
)

)
